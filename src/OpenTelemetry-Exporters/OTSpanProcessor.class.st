"
I am responsible for processing and handling `OTSpan`s generated by an application.
I receive spans as they are created and am responsible for applying various processing steps to them.
These steps may include filtering, sampling, enriching, and forwarding to exporters.
Spans are processed in real time, providing immediate feedback and insight into application behavior.

By implementing custom SpanProcessor classes, developers can tailor span processing behavior to meet specific use cases and requirements.
"
Class {
	#name : #OTSpanProcessor,
	#superclass : #Object,
	#classInstVars : [
		'instance'
	],
	#category : #'OpenTelemetry-Exporters'
}

{ #category : #accessing }
OTSpanProcessor class >> instance [

	^ instance ifNil: [ instance := self readConfiguration ]
]

{ #category : #accessing }
OTSpanProcessor class >> readConfiguration [

	^ OTSimpleSpanProcessor new
]

{ #category : #processing }
OTSpanProcessor >> process: span [

	self subclassResponsibility
]
